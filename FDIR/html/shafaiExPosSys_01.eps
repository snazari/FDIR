%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 7 Professional .
%%Title: C:\Users\sqn4594\Documents\FDIR\html\shafaiExPosSys_01.eps
%%CreationDate: 05/10/2015  12:04:14
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:   109   244   486   552
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:   109   244   486   552
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1152 6636 csm

  166     4  4515  3700 rc
86 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5040 3781 rf
6 w
0 3081 3905 0 0 -3081 655 3364 4 MP
PP
-3905 0 0 3081 3905 0 0 -3081 655 3364 5 MP stroke
4 w
DO
SO
6 w
0 sg
 655  283 mt 4560  283 L
 655 3364 mt 4560 3364 L
4560 3364 mt 4560  283 L
 655 3364 mt  655  283 L
 655 3364 mt 4560 3364 L
 655 3364 mt  655  283 L
 655 3364 mt  655 3324 L
 655  283 mt  655  322 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 622 3509 mt 
(0) s
1436 3364 mt 1436 3324 L
1436  283 mt 1436  322 L
1370 3509 mt 
(10) s
2217 3364 mt 2217 3324 L
2217  283 mt 2217  322 L
2151 3509 mt 
(20) s
2998 3364 mt 2998 3324 L
2998  283 mt 2998  322 L
2932 3509 mt 
(30) s
3779 3364 mt 3779 3324 L
3779  283 mt 3779  322 L
3713 3509 mt 
(40) s
4560 3364 mt 4560 3324 L
4560  283 mt 4560  322 L
4494 3509 mt 
(50) s
 655 3364 mt  694 3364 L
4560 3364 mt 4520 3364 L
 384 3408 mt 
(-0.2) s
 655 2923 mt  694 2923 L
4560 2923 mt 4520 2923 L
 554 2967 mt 
(0) s
 655 2483 mt  694 2483 L
4560 2483 mt 4520 2483 L
 454 2527 mt 
(0.2) s
 655 2043 mt  694 2043 L
4560 2043 mt 4520 2043 L
 454 2087 mt 
(0.4) s
 655 1603 mt  694 1603 L
4560 1603 mt 4520 1603 L
 454 1647 mt 
(0.6) s
 655 1163 mt  694 1163 L
4560 1163 mt 4520 1163 L
 454 1207 mt 
(0.8) s
 655  723 mt  694  723 L
4560  723 mt 4520  723 L
 554  767 mt 
(1) s
 655  283 mt  694  283 L
4560  283 mt 4520  283 L
 454  327 mt 
(1.2) s
 655  283 mt 4560  283 L
 655 3364 mt 4560 3364 L
4560 3364 mt 4560  283 L
 655 3364 mt  655  283 L
gs 655 283 3906 3082 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 2224 2923 300 MP stroke
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 1 8 0 
8 0 8 1 8 1 7 1 8 1 8 2 8 3 8 3 
8 5 7 6 8 8 8 12 8 15 8 21 7 29 8 38 
8 52 8 69 8 94 7 128 8 171 8 232 8 313 8 423 
7 571 655 723 202 MP stroke
/c9 { 0.000000 1.000000 0.000000 sr} bdef
c9
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 17 8 0 7 -17 8 -18 8 0 8 0 8 0 7 0 
8 18 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 -3 8 0 8 0 8 0 8 0 7 0 
8 0 8 3 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 -1 7 0 
8 0 8 0 8 1 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 2224 2923 300 MP stroke
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 1 8 0 7 0 8 0 
8 1 8 0 8 1 8 1 7 0 8 2 8 1 8 1 
8 2 7 3 8 2 8 4 8 4 8 5 7 6 8 8 
8 9 8 10 8 14 7 15 8 20 8 23 8 27 8 33 
8 39 7 47 8 56 8 66 8 77 8 91 7 105 8 122 
8 138 8 155 8 173 7 186 8 194 8 193 8 176 8 134 
7 55 655 723 202 MP stroke
/c10 { 1.000000 0.000000 0.000000 sr} bdef
c10
8 17 8 18 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 -1 8 0 8 0 7 1 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 7 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 2224 2923 300 MP stroke
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 8 0 7 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 8 0 7 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 8 0 
7 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 8 0 7 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 0 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 0 8 0 
8 0 8 0 7 0 8 0 8 0 8 0 8 1 7 0 
8 0 8 0 8 0 8 0 7 0 8 0 8 1 8 0 
8 0 8 0 7 1 8 0 8 0 8 1 8 0 7 0 
8 1 8 1 8 0 8 1 7 1 8 0 8 1 8 1 
8 2 7 1 8 1 8 2 8 1 8 2 8 2 7 2 
8 3 8 3 8 3 8 3 7 4 8 4 8 5 8 5 
8 5 7 6 8 7 8 7 8 8 8 9 7 10 8 11 
8 12 8 14 8 14 8 16 7 18 8 20 8 21 8 24 
8 25 7 29 8 31 8 33 8 38 8 40 7 44 8 48 
8 52 8 57 8 61 7 67 8 71 8 76 8 82 8 87 
8 92 7 97 8 102 8 105 8 108 8 110 7 110 8 107 
8 103 8 96 8 83 7 68 8 48 8 21 8 -10 8 -47 
7 -89 655 723 202 MP stroke
gr

c10
0 sg
2169 3652 mt 
(Time in seconds) s
 302 2364 mt  -90 rotate
(State Estimate Error) s
90 rotate
 605  188 mt 
(Positive Dynamic System and Positive UIO Observer State Est\
imation Error) s
 638 3407 mt 
( ) s
4544  325 mt 
( ) s
1 sg
0 642 619 0 0 -642 3881 985 4 MP
PP
-619 0 0 642 619 0 0 -642 3881 985 5 MP stroke
4 w
DO
SO
6 w
0 sg
3881  343 mt 4500  343 L
3881  985 mt 4500  985 L
4500  985 mt 4500  343 L
3881  985 mt 3881  343 L
3881  985 mt 4500  985 L
3881  985 mt 3881  343 L
3881  343 mt 4500  343 L
3881  985 mt 4500  985 L
4500  985 mt 4500  343 L
3881  985 mt 3881  343 L
4335  478 mt 
(x) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

4395  538 mt 
(1) s
gs 3881 343 620 643 rc
c8
349 0 3950 462 2 MP stroke
gr

c8
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

4335  680 mt 
(x) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

4395  740 mt 
(2) s
gs 3881 343 620 643 rc
c9
349 0 3950 664 2 MP stroke
gr

c9
0 sg
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

4335  881 mt 
(x) s
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 96 FMSR

4395  941 mt 
(3) s
gs 3881 343 620 643 rc
c10
349 0 3950 865 2 MP stroke
gr

c10

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
